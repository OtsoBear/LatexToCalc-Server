name: API Status Badge

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check-api-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check API Status
        id: api_status
        run: |
          response=$(curl --write-out "%{http_code}\n" --silent --output /dev/null https://otso.veistera.com/translate)
          if [ "$response" -eq 200 ]; then
            echo "API Status: Online"
            echo "![API Status](https://img.shields.io/badge/API%20Status-Online-brightgreen)" > api-status-badge.md
            echo "online" > api-status.txt
          else
            echo "API Status: Offline (HTTP Code: $response)"
            echo "![API Status](https://img.shields.io/badge/API%20Status-Offline-red)" > api-status-badge.md
            echo "offline" > api-status.txt
          fi

      - name: Check if status has changed
        id: status_check
        run: |
          if [ -f api-status.txt ]; then
            last_status=$(cat api-status.txt)
            echo "Last recorded status: $last_status"
          else
            last_status="unknown"  # Or some other default value
            echo "No previous status recorded. Defaulting to 'unknown'."
          fi

          current_status=$(cat api-status.txt)

          # Handle case where last_status is empty
          if [ -z "$last_status" ]; then
            last_status="unknown"  # Treat empty as unknown
            echo "Last status was empty; treating it as 'unknown'."
          fi

          if [ "$last_status" != "$current_status" ]; then
            echo "Status changed from '$last_status' to '$current_status'."
            echo "changed" > change.txt
          else
            echo "No status change detected. Current status remains '$current_status'."
            echo "unchanged" > change.txt
          fi

      - name: Commit changes if status changed
        if: steps.status_check.outputs.change == 'changed'
        run: |
          git config --global user.email "otso.veistera@gmail.com"
          git config --global user.name "OtsoBear"
          git add api-status-badge.md api-status.txt
          git commit -m "Update API status badge"
          git push
